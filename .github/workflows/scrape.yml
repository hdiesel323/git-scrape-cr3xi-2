name: Scrape Crexi Industrial Owner Carry and Upload to Supabase

on:
  push:
  workflow_dispatch:
  schedule:
    - cron: '0 6 * * *' # Run once daily at 06:00 AM UTC

jobs:
  scheduled:
    runs-on: ubuntu-latest
    steps:
    - name: Check out this repo
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: '3.x'

    - name: Install Required Python Packages
      run: |
        pip install supabase python-dotenv

    - name: Fetch latest data from Crexi
      run: |-
        # Fetch and save the raw JSON
        curl -s "https://api.crexi.com/assets/search" \
          -H "accept: application/json, text/plain, */*" \
          -H "accept-language: en-US,en;q=0.9" \
          -H "client-timezone-offset: -7" \
          -H "content-type: application/json" \
          -H "mixpanel-distinct-id: \$device:1922ee478758a7-0997f3e56efb2f-16525637-384000-1922ee478758a7" \
          -H "origin: https://www.crexi.com" \
          -H "priority: u=1, i" \
          -H "referer: https://www.crexi.com/" \
          -H "sec-ch-ua: 'Google Chrome';v='129', 'Not=A?Brand';v='8', 'Chromium';v='129'" \
          -H "sec-ch-ua-mobile: ?0" \
          -H "sec-ch-ua-platform: 'macOS'" \
          -H "sec-fetch-dest: empty" \
          -H "sec-fetch-mode: cors" \
          -H "sec-fetch-site: same-site" \
          -H "user-agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/129.0.0.0 Safari/537.36" \
          --data-raw '{"term":"owner carry","types":["Industrial"],"count":5,"mlScenario":"Recombee-Recommendations","offset":0,"userId":"$device:1922ee478758a7-0997f3e56efb2f-16525637-384000-1922ee478758a7","sortDirection":"Ascending","sortOrder":"relevance","includeUnpriced":true}' \
          > crexi-industrial-owner-carry-raw.json
        
        # Output the raw JSON to the console for inspection
        cat crexi-industrial-owner-carry-raw.json

        # Process the JSON using jq, accessing the "data" field correctly
        cat crexi-industrial-owner-carry-raw.json | jq '.data[] | .propertyUrl = "https://www.crexi.com/properties/" + (.id|tostring) + (if (.urlSlug and .urlSlug != "") then "/" + .urlSlug else "" end)' > crexi-industrial-owner-carry.json

    - name: Upload Processed JSON to Supabase
      env:
        SUPABASE_URL: ${{ secrets.SUPABASE_URL }}
        SUPABASE_KEY: ${{ secrets.SUPABASE_KEY }}
      run: |-
        python - <<EOF
        import os
        import json
        from supabase import create_client, Client

        # Initialize Supabase client
        SUPABASE_URL = os.getenv('SUPABASE_URL')
        SUPABASE_KEY = os.getenv('SUPABASE_KEY')
        supabase: Client = create_client(SUPABASE_URL, SUPABASE_KEY)

        # Load the processed JSON data
        with open("crexi-industrial-owner-carry.json", "r") as f:
            properties = json.load(f)

        # Insert each property into the Supabase table
        for property_data in properties:
            # Adjust keys to match the table columns
            response = supabase.table('crexi_properties').insert(property_data).execute()
            
            if response.status_code != 201:
                print(f"Failed to insert property {property_data['id']}: {response}")
            else:
                print(f"Successfully inserted property {property_data['id']}")
        EOF
